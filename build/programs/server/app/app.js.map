{"version":3,"sources":["meteor://ðŸ’»app/lib/collection.js","meteor://ðŸ’»app/server/main.js"],"names":["module","export","Users","Mongo","link","v","Collection","Meteor","startup","methods","getBalance","balance","find","userId","fetch","money","getNumber","number","Math","floor","random","getSelect","select","section","updateSelect","hi","update","$set","updateSelect1","upMoney","arg1","downMoney","updateBet","bet","getBet","addBalance","balanceS"],"mappings":"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","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\n\nexport const Users = new Mongo.Collection('user');\n","import { Meteor } from 'meteor/meteor';\nimport { Users } from '/lib/collection';\n\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n\nMeteor.methods({\n    // get Balance \n\tgetBalance : function () {\n    \tbalance = Users.find({\"_id\" : Meteor.userId()}).fetch()[0].money;\n        return balance;\n    },\n    // get randomNumber in logic cube\n    getNumber : function () {\n    \tnumber = Math.floor(Math.random() * 6) + 1;;\n        return number;\n    \t\n    },\n    //Get User Selection\n    getSelect : function () {\n        select = Users.find({\"_id\" : Meteor.userId()}).fetch()[0].section;\n        return select;\n    },\n    //Update user select\n    updateSelect: function (select) {\n        hi = select;\n        Users.update({\"_id\" : Meteor.userId()}, { $set: { 'section' : hi } });\n        return \"complete\";\n    },\n    updateSelect1: function () {\n        hi = Meteor.userId();\n        \n        return hi;\n    },\n    upMoney: function (arg1) {\n        balance = Users.find().fetch()[0].money + arg1 * 5;\n        Users.update({\"_id\" : Meteor.userId()}, { $set: { 'money' : balance } });\n    },\n    downMoney: function (arg1) {\n        balance = Users.find().fetch()[0].money - arg1;\n        Users.update({\"_id\" : Meteor.userId()}, { $set: { 'money' : balance } });\n    },\n    updateBet: function (arg1) {\n        bet = arg1;\n        Users.update({\"_id\" : Meteor.userId()}, {$set: {\"bet\" : bet}}) ;      \n    },\n    getBet: function () {\n        bet = Users.find({\"_id\" : Meteor.userId()}).fetch()[0].bet;\n        balance = Users.find({\"_id\" : Meteor.userId()}).fetch()[0].money;  \n\n        if( bet > balance){\n            bet = 0\n            return bet;\n        } else {\n\n            return bet;\n        }\n    },\n    addBalance: function () {\n        balanceS = Users.find({\"_id\" : Meteor.userId()}).fetch()[0].money; \n        balance = balanceS + 500;\n        Users.update({\"_id\" : Meteor.userId()}, {$set: {\"bet\" : bet}}) ; \n    }\n});"]}